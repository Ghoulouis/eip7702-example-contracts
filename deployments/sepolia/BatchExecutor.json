{
  "address": "0x8Aa00fF8a8c4F383e3e1D4809da51e0e1443Fb13",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct BatchExecutor.Call[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xadae99ba72d39d03219731f6840bdb79fb73517e42daf48d0934bf39a45cb3da",
  "receipt": {
    "to": null,
    "from": "0xEE6Eacc608A4524DF5Cb1a33CE7840139a8deA1A",
    "contractAddress": "0x8Aa00fF8a8c4F383e3e1D4809da51e0e1443Fb13",
    "transactionIndex": 91,
    "gasUsed": "451267",
    "logsBloom": "0x
    "blockHash": "0xb9346b1b783983ef086c895bc4d85841d5481a158d866d55f4127c7e69383c7a",
    "transactionHash": "0xadae99ba72d39d03219731f6840bdb79fb73517e42daf48d0934bf39a45cb3da",
    "logs": [],
    "blockNumber": 9221034,
    "cumulativeGasUsed": "38636484",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 6,
  "solcInputHash": "26aa4ce3cf082f6fa7471e92c3e407e2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct BatchExecutor.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BatchExecutor.sol\":\"BatchExecutor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"},\"contracts/BatchExecutor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.28;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./interfaces/IVault.sol\\\";\\n\\ncontract BatchExecutor {\\n  struct Call {\\n    address to;\\n    uint256 value;\\n    bytes data;\\n  }\\n\\n  function execute(Call[] calldata calls) external payable {\\n    // This function will be executed in the context of the EOA via EIP-7702 delegation\\n    // No need for msg.sender check in simple cases, but add if required for security\\n    for (uint256 i = 0; i < calls.length; i++) {\\n      (bool success, ) = calls[i].to.call{ value: calls[i].value }(calls[i].data);\\n      require(success, \\\"Batch call failed\\\");\\n    }\\n  }\\n\\n  function deposit(uint256 amount) external payable {\\n    address vault = 0x6E33FD6dD5aD776A218e3CB4ddaB6E8868f2eEfD;\\n    address token = 0xF04C04AF7fF76BAf096ddB18B3Cd453a7B2fEf04;\\n    IERC20(token).approve(vault, amount);\\n    IVault(vault).deposit(amount);\\n  }\\n  receive() external payable {}\\n}\\n\",\"keccak256\":\"0xfa58b34b171f490968ec3a8ea35a0235f3c8ac5ac37160d0a8f3c3b5945c1639\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IVault.sol\":{\"content\":\"// Interface for the Vault contract\\npragma solidity ^0.8.28;\\n\\ninterface IVault {\\n  // Returns the address of the token managed by the vault\\n  function token() external view returns (address);\\n\\n  // Initializes the vault with the token address\\n  function initialize(address _token) external;\\n\\n  // Deposits a specified amount of tokens into the vault\\n  function deposit(uint256 amount) external;\\n\\n  // Deposits tokens to a specific address using EIP-7702 logic\\n  function depositEip7702(address to, uint256 amount) external payable;\\n}\\n\",\"keccak256\":\"0x6a7cf225f10288d14ddf26bde191df82cfc499133b2ed28421492c08ec7e683b\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b506107388061001f6000396000f3fe60806040526004361061002d5760003560e01c80633f707e6b14610039578063b6b55f251461005557610034565b3661003457005b600080fd5b610053600480360381019061004e9190610362565b610071565b005b61006f600480360381019061006a91906103e5565b6101d2565b005b60005b828290508110156101cd57600083838381811061009457610093610412565b5b90506020028101906100a69190610450565b60000160208101906100b891906104d6565b73ffffffffffffffffffffffffffffffffffffffff168484848181106100e1576100e0610412565b5b90506020028101906100f39190610450565b6020013585858581811061010a57610109610412565b5b905060200281019061011c9190610450565b806040019061012b9190610503565b6040516101399291906105a5565b60006040518083038185875af1925050503d8060008114610176576040519150601f19603f3d011682016040523d82523d6000602084013e61017b565b606091505b50509050806101bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b69061061b565b60405180910390fd5b508080600101915050610074565b505050565b6000736e33fd6dd5ad776a218e3cb4ddab6e8868f2eefd9050600073f04c04af7ff76baf096ddb18b3cd453a7b2fef0490508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b383856040518363ffffffff1660e01b815260040161023f929190610659565b6020604051808303816000875af115801561025e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028291906106ba565b508173ffffffffffffffffffffffffffffffffffffffff1663b6b55f25846040518263ffffffff1660e01b81526004016102bc91906106e7565b600060405180830381600087803b1580156102d657600080fd5b505af11580156102ea573d6000803e3d6000fd5b50505050505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610322576103216102fd565b5b8235905067ffffffffffffffff81111561033f5761033e610302565b5b60208301915083602082028301111561035b5761035a610307565b5b9250929050565b60008060208385031215610379576103786102f3565b5b600083013567ffffffffffffffff811115610397576103966102f8565b5b6103a38582860161030c565b92509250509250929050565b6000819050919050565b6103c2816103af565b81146103cd57600080fd5b50565b6000813590506103df816103b9565b92915050565b6000602082840312156103fb576103fa6102f3565b5b6000610409848285016103d0565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008235600160600383360303811261046c5761046b610441565b5b80830191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104a382610478565b9050919050565b6104b381610498565b81146104be57600080fd5b50565b6000813590506104d0816104aa565b92915050565b6000602082840312156104ec576104eb6102f3565b5b60006104fa848285016104c1565b91505092915050565b600080833560016020038436030381126105205761051f610441565b5b80840192508235915067ffffffffffffffff82111561054257610541610446565b5b60208301925060018202360383131561055e5761055d61044b565b5b509250929050565b600081905092915050565b82818337600083830152505050565b600061058c8385610566565b9350610599838584610571565b82840190509392505050565b60006105b2828486610580565b91508190509392505050565b600082825260208201905092915050565b7f42617463682063616c6c206661696c6564000000000000000000000000000000600082015250565b60006106056011836105be565b9150610610826105cf565b602082019050919050565b60006020820190508181036000830152610634816105f8565b9050919050565b61064481610498565b82525050565b610653816103af565b82525050565b600060408201905061066e600083018561063b565b61067b602083018461064a565b9392505050565b60008115159050919050565b61069781610682565b81146106a257600080fd5b50565b6000815190506106b48161068e565b92915050565b6000602082840312156106d0576106cf6102f3565b5b60006106de848285016106a5565b91505092915050565b60006020820190506106fc600083018461064a565b9291505056fea264697066735822122073bc2203a2f069d57e2a1e414fad52021dff719d42d4cf2d57338a133c4db63864736f6c634300081c0033",
  "deployedBytecode": "0x60806040526004361061002d5760003560e01c80633f707e6b14610039578063b6b55f251461005557610034565b3661003457005b600080fd5b610053600480360381019061004e9190610362565b610071565b005b61006f600480360381019061006a91906103e5565b6101d2565b005b60005b828290508110156101cd57600083838381811061009457610093610412565b5b90506020028101906100a69190610450565b60000160208101906100b891906104d6565b73ffffffffffffffffffffffffffffffffffffffff168484848181106100e1576100e0610412565b5b90506020028101906100f39190610450565b6020013585858581811061010a57610109610412565b5b905060200281019061011c9190610450565b806040019061012b9190610503565b6040516101399291906105a5565b60006040518083038185875af1925050503d8060008114610176576040519150601f19603f3d011682016040523d82523d6000602084013e61017b565b606091505b50509050806101bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b69061061b565b60405180910390fd5b508080600101915050610074565b505050565b6000736e33fd6dd5ad776a218e3cb4ddab6e8868f2eefd9050600073f04c04af7ff76baf096ddb18b3cd453a7b2fef0490508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b383856040518363ffffffff1660e01b815260040161023f929190610659565b6020604051808303816000875af115801561025e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028291906106ba565b508173ffffffffffffffffffffffffffffffffffffffff1663b6b55f25846040518263ffffffff1660e01b81526004016102bc91906106e7565b600060405180830381600087803b1580156102d657600080fd5b505af11580156102ea573d6000803e3d6000fd5b50505050505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610322576103216102fd565b5b8235905067ffffffffffffffff81111561033f5761033e610302565b5b60208301915083602082028301111561035b5761035a610307565b5b9250929050565b60008060208385031215610379576103786102f3565b5b600083013567ffffffffffffffff811115610397576103966102f8565b5b6103a38582860161030c565b92509250509250929050565b6000819050919050565b6103c2816103af565b81146103cd57600080fd5b50565b6000813590506103df816103b9565b92915050565b6000602082840312156103fb576103fa6102f3565b5b6000610409848285016103d0565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008235600160600383360303811261046c5761046b610441565b5b80830191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104a382610478565b9050919050565b6104b381610498565b81146104be57600080fd5b50565b6000813590506104d0816104aa565b92915050565b6000602082840312156104ec576104eb6102f3565b5b60006104fa848285016104c1565b91505092915050565b600080833560016020038436030381126105205761051f610441565b5b80840192508235915067ffffffffffffffff82111561054257610541610446565b5b60208301925060018202360383131561055e5761055d61044b565b5b509250929050565b600081905092915050565b82818337600083830152505050565b600061058c8385610566565b9350610599838584610571565b82840190509392505050565b60006105b2828486610580565b91508190509392505050565b600082825260208201905092915050565b7f42617463682063616c6c206661696c6564000000000000000000000000000000600082015250565b60006106056011836105be565b9150610610826105cf565b602082019050919050565b60006020820190508181036000830152610634816105f8565b9050919050565b61064481610498565b82525050565b610653816103af565b82525050565b600060408201905061066e600083018561063b565b61067b602083018461064a565b9392505050565b60008115159050919050565b61069781610682565b81146106a257600080fd5b50565b6000815190506106b48161068e565b92915050565b6000602082840312156106d0576106cf6102f3565b5b60006106de848285016106a5565b91505092915050565b60006020820190506106fc600083018461064a565b9291505056fea264697066735822122073bc2203a2f069d57e2a1e414fad52021dff719d42d4cf2d57338a133c4db63864736f6c634300081c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}