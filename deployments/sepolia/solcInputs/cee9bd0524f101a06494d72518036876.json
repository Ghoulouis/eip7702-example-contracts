{
  "language": "Solidity",
  "sources": {
    "contracts/BatchExecutor.sol": {
      "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.28;\ncontract BatchExecutor {\n  uint256 public nonce;\n\n  struct Call {\n    address to;\n    uint256 value;\n    bytes data;\n  }\n\n  function execute(Call[] calldata calls) external {\n    nonce++;\n    // This function will be executed in the context of the EOA via EIP-7702 delegation\n    // No need for msg.sender check in simple cases, but add if required for security\n    for (uint256 i = 0; i < calls.length; i++) {\n      (bool success, ) = calls[i].to.call{ value: calls[i].value }(calls[i].data);\n      require(success, \"Batch call failed\");\n    }\n  }\n}\n"
    }
  },
  "settings": {
    "evmVersion": "paris",
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}